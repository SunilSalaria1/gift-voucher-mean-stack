{
  "swagger": "2.0",
  "info": {
    "title": "My API",
    "description": "Description",
    "version": "1.0.0"
  },
  "host": "localhost:3000",
  "basePath": "/",
  "tags": [
    {
      "name": "Users",
      "description": "User Routes"
    }
  ],
  "schemes": [
    "http"
  ],
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "JWT Authorization header using the Bearer scheme. \r\n\r\n Enter 'Bearer' [space] and then your token in the text input below.\r\n\r\nExample: \"Bearer 1safsfsdfdfd\""
    }
  },
  "paths": {
    "/api/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Register user",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "User registration details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/registerUser"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User Created successfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Invalid credentials"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "Get all users.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/getUser/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "Get User with Id .",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/updateUser/{id}": {
      "put": {
        "tags": [
          "Auth"
        ],
        "description": "Update User with Id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "User update details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User updated successfully"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/deleteUser/{id}": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Delete User with Id .",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/createAdminRemoveAdmin": {
      "post": {
        "tags": [
          "Admin"
        ],
        "description": "Update User with Id.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Admin Creation details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createAdmin"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Admin Created successfully"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/getAllAdmins": {
      "get": {
        "tags": [
          "Admin"
        ],
        "description": "Get all Admins.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/loginUser": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Login user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "User login credentials",
            "required": true,
            "schema": {
              "$ref": "#/definitions/loginUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Login successful"
          },
          "400": {
            "description": "Missing required fields or Invalid credentials"
          },
          "401": {
            "description": "Invalid credentials"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/logoutUser": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Logout user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "User logout credentials",
            "required": true,
            "schema": {
              "$ref": "#/definitions/logoutUser"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Logout successful"
          },
          "400": {
            "description": "Missing token or Invalid token"
          },
          "401": {
            "description": "Invalid token"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/addFeedback": {
      "post": {
        "tags": [
          "Feedback section"
        ],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "userId": {
                  "example": "any"
                },
                "rating": {
                  "example": "any"
                },
                "description": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/getFeedbacks": {
      "get": {
        "tags": [
          "Feedback section"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "definitions": {
    "registerUser": {
      "type": "object",
      "properties": {
        "dob": {
          "type": "string",
          "example": "Thu Feb 13 2025 16:44:12 GMT+0530 (India Standard Time)"
        },
        "joiningDate": {
          "type": "string",
          "example": "Thu Feb 13 2025 16:44:12 GMT+0530 (India Standard Time)"
        },
        "email": {
          "type": "string",
          "example": "aniket98578@gmail.com"
        },
        "name": {
          "type": "string",
          "example": "Aniket Sharma"
        },
        "department": {
          "type": "string",
          "example": "Frontend"
        }
      }
    },
    "updateUser": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Aniket Sharma"
        },
        "department": {
          "type": "string",
          "example": "Front End"
        }
      }
    },
    "loginUser": {
      "type": "object",
      "properties": {
        "empCode": {
          "type": "string",
          "example": "LPIT30281076"
        },
        "password": {
          "type": "string",
          "example": "jyo04122001"
        }
      }
    },
    "createAdmin": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "67a4af8cf19f72c03d3d4547"
        },
        "isAdmin": {
          "type": "string",
          "example": "true"
        }
      }
    },
    "logoutUser": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "67a4af8cf19f72c03d3d4547"
        },
        "isAdmin": {
          "type": "string",
          "example": "true"
        }
      }
    }
  }
}